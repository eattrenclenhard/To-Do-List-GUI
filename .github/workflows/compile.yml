name: Compile Binaries

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build application (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pip install pyinstaller
        pyinstaller --onefile --windowed --clean gui.py --name "To Do List-desktop-Linux"

    - name: Build application (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pip install pyinstaller
        pyinstaller --onefile --windowed --clean gui.py --name "To Do List-desktop-macOS"

    - name: Build application (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pip install pyinstaller
        pyinstaller --onefile --windowed --clean gui.py --name "To Do List-desktop-Windows"

    - name: Upload artifacts to GitHub Actions
      uses: actions/upload-artifact@v4
      with:
        name: ToDoList-desktop-${{ matrix.os }}
        path: dist/

  upload-release:
    needs: build
    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: ToDoList-desktop-ubuntu-latest
        path: artifacts/linux

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: ToDoList-desktop-windows-latest
        path: artifacts/windows

    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: ToDoList-desktop-macos-latest
        path: artifacts/macos

    - name: Repackage macOS artifact into tarball
      run: |
        ls artifacts/macos && ls artifacts/macos/'To Do List-desktop-macOS' &&
        tar -czf 'artifacts/macos/To Do List-desktop-macOS.tar.gz' -C artifacts/macos 'To Do List-desktop-macOS' && rm -rf 'artifacts/macos/To Do List-desktop-macOS'

    - name: List Artifacts
      run: ls -R
      working-directory: artifacts

    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          artifacts/linux
          artifacts/windows

        token: ${{ secrets.GH_Token }}
        tag: ${{ github.run_number  }} # ref_name
        name: Release ${{ github.run_number }} # ref_name
        body: |
          This release includes builds for:
          - Windows
          - macOS
          - Linux

#    - name: Upload Release
#      uses: softprops/action-gh-release@v2
#      if: ${{ success() }}
#      id: create_release
#      with:
#        tag_name: v${{ github.run_number }}
#        files: |
#          artifacts/*
#        body: Release of commit ${{ github.sha }}
#        draft: false
#        prerelease: false
#        generate_release_notes: true

#    - name: Upload Prerelease
#      uses: softprops/action-gh-release@v1
#      if: ${{  success() }}
#      with:
#        tag_name: Prerelease-${{ github.ref_name }}
#        files: |
#          bin/*
#        prerelease: true
#        generate_release_notes: true
#        body_path: release.txt

#    - name: Upload Release Assets
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GH_Token }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: release-artifacts/*
#        asset_name: ${{ github.run_number }}-${{ matrix.os }}-binary
#        asset_content_type: application/octet-stream